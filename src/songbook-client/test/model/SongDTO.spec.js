/*
 * Songbook API
 * Tourist songs application
 *
 * OpenAPI spec version: 1.5.5
 * Contact: andrzej.przybysz01@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.14
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SongbookApi);
  }
}(this, function(expect, SongbookApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('SongDTO', function() {
      beforeEach(function() {
        instance = new SongbookApi.SongDTO();
      });

      it('should create an instance of SongDTO', function() {
        // TODO: update the code to test SongDTO
        expect(instance).to.be.a(SongbookApi.SongDTO);
      });

      it('should have the property addedBy (base name: "addedBy")', function() {
        // TODO: update the code to test the property addedBy
        expect(instance).to.have.property('addedBy');
        // expect(instance.addedBy).to.be(expectedValueLiteral);
      });

      it('should have the property author (base name: "author")', function() {
        // TODO: update the code to test the property author
        expect(instance).to.have.property('author');
        // expect(instance.author).to.be(expectedValueLiteral);
      });

      it('should have the property averageRating (base name: "averageRating")', function() {
        // TODO: update the code to test the property averageRating
        expect(instance).to.have.property('averageRating');
        // expect(instance.averageRating).to.be(expectedValueLiteral);
      });

      it('should have the property category (base name: "category")', function() {
        // TODO: update the code to test the property category
        expect(instance).to.have.property('category');
        // expect(instance.category).to.be(expectedValueLiteral);
      });

      it('should have the property coauthors (base name: "coauthors")', function() {
        // TODO: update the code to test the property coauthors
        expect(instance).to.have.property('coauthors');
        // expect(instance.coauthors).to.be(expectedValueLiteral);
      });

      it('should have the property edits (base name: "edits")', function() {
        // TODO: update the code to test the property edits
        expect(instance).to.have.property('edits');
        // expect(instance.edits).to.be(expectedValueLiteral);
      });

      it('should have the property guitarTabs (base name: "guitarTabs")', function() {
        // TODO: update the code to test the property guitarTabs
        expect(instance).to.have.property('guitarTabs');
        // expect(instance.guitarTabs).to.be(expectedValueLiteral);
      });

      it('should have the property id (base name: "id")', function() {
        // TODO: update the code to test the property id
        expect(instance).to.have.property('id');
        // expect(instance.id).to.be(expectedValueLiteral);
      });

      it('should have the property isAwaiting (base name: "isAwaiting")', function() {
        // TODO: update the code to test the property isAwaiting
        expect(instance).to.have.property('isAwaiting');
        // expect(instance.isAwaiting).to.be(expectedValueLiteral);
      });

      it('should have the property lyrics (base name: "lyrics")', function() {
        // TODO: update the code to test the property lyrics
        expect(instance).to.have.property('lyrics');
        // expect(instance.lyrics).to.be(expectedValueLiteral);
      });

      it('should have the property tags (base name: "tags")', function() {
        // TODO: update the code to test the property tags
        expect(instance).to.have.property('tags');
        // expect(instance.tags).to.be(expectedValueLiteral);
      });

      it('should have the property title (base name: "title")', function() {
        // TODO: update the code to test the property title
        expect(instance).to.have.property('title');
        // expect(instance.title).to.be(expectedValueLiteral);
      });

      it('should have the property trivia (base name: "trivia")', function() {
        // TODO: update the code to test the property trivia
        expect(instance).to.have.property('trivia');
        // expect(instance.trivia).to.be(expectedValueLiteral);
      });

    });
  });

}));
