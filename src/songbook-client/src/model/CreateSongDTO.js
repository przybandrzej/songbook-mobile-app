/*
 * Songbook API
 * Tourist songs application
 *
 * OpenAPI spec version: 1.5.5
 * Contact: andrzej.przybysz01@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.14
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient';
import {CreateCoauthorDTO} from './CreateCoauthorDTO';
import {CreateVerseDTO} from './CreateVerseDTO';

/**
 * The CreateSongDTO model module.
 * @module model/CreateSongDTO
 * @version 1.5.5
 */
export class CreateSongDTO {
  /**
   * Constructs a new <code>CreateSongDTO</code>.
   * Class representing a DTO for creating songs in the application.
   * @alias module:model/CreateSongDTO
   * @class
   * @param authorName {String} Author's name (doesn't have to exist)
   * @param categoryId {Number} Category
   * @param title {String} 
   * @param tags {Array.<String>} 
   */
  constructor(authorName, categoryId, title, tags) {
    this.authorName = authorName;
    this.categoryId = categoryId;
    this.title = title;
    this.tags = tags;
  }

  /**
   * Constructs a <code>CreateSongDTO</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/CreateSongDTO} obj Optional instance to populate.
   * @return {module:model/CreateSongDTO} The populated <code>CreateSongDTO</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new CreateSongDTO();
      if (data.hasOwnProperty('authorName'))
        obj.authorName = ApiClient.convertToType(data['authorName'], 'String');
      if (data.hasOwnProperty('categoryId'))
        obj.categoryId = ApiClient.convertToType(data['categoryId'], 'Number');
      if (data.hasOwnProperty('title'))
        obj.title = ApiClient.convertToType(data['title'], 'String');
      if (data.hasOwnProperty('coauthors'))
        obj.coauthors = ApiClient.convertToType(data['coauthors'], [CreateCoauthorDTO]);
      if (data.hasOwnProperty('verses'))
        obj.verses = ApiClient.convertToType(data['verses'], [CreateVerseDTO]);
      if (data.hasOwnProperty('trivia'))
        obj.trivia = ApiClient.convertToType(data['trivia'], 'String');
      if (data.hasOwnProperty('tags'))
        obj.tags = ApiClient.convertToType(data['tags'], ['String']);
    }
    return obj;
  }
}

/**
 * Author's name (doesn't have to exist)
 * @member {String} authorName
 */
CreateSongDTO.prototype.authorName = undefined;

/**
 * Category
 * @member {Number} categoryId
 */
CreateSongDTO.prototype.categoryId = undefined;

/**
 * @member {String} title
 */
CreateSongDTO.prototype.title = undefined;

/**
 * @member {Array.<module:model/CreateCoauthorDTO>} coauthors
 */
CreateSongDTO.prototype.coauthors = undefined;

/**
 * @member {Array.<module:model/CreateVerseDTO>} verses
 */
CreateSongDTO.prototype.verses = undefined;

/**
 * @member {String} trivia
 */
CreateSongDTO.prototype.trivia = undefined;

/**
 * @member {Array.<String>} tags
 */
CreateSongDTO.prototype.tags = undefined;


