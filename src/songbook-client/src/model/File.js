/*
 * Songbook API
 * Tourist songs application
 *
 * OpenAPI spec version: 1.5.5
 * Contact: andrzej.przybysz01@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.14
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient';

/**
 * The File model module.
 * @module model/File
 * @version 1.5.5
 */
export class File {
  /**
   * Constructs a new <code>File</code>.
   * @alias module:model/File
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>File</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/File} obj Optional instance to populate.
   * @return {module:model/File} The populated <code>File</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new File();
      if (data.hasOwnProperty('absolute'))
        obj.absolute = ApiClient.convertToType(data['absolute'], 'Boolean');
      if (data.hasOwnProperty('absoluteFile'))
        obj.absoluteFile = File.constructFromObject(data['absoluteFile']);
      if (data.hasOwnProperty('absolutePath'))
        obj.absolutePath = ApiClient.convertToType(data['absolutePath'], 'String');
      if (data.hasOwnProperty('canonicalFile'))
        obj.canonicalFile = File.constructFromObject(data['canonicalFile']);
      if (data.hasOwnProperty('canonicalPath'))
        obj.canonicalPath = ApiClient.convertToType(data['canonicalPath'], 'String');
      if (data.hasOwnProperty('directory'))
        obj.directory = ApiClient.convertToType(data['directory'], 'Boolean');
      if (data.hasOwnProperty('file'))
        obj.file = ApiClient.convertToType(data['file'], 'Boolean');
      if (data.hasOwnProperty('freeSpace'))
        obj.freeSpace = ApiClient.convertToType(data['freeSpace'], 'Number');
      if (data.hasOwnProperty('hidden'))
        obj.hidden = ApiClient.convertToType(data['hidden'], 'Boolean');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('parent'))
        obj.parent = ApiClient.convertToType(data['parent'], 'String');
      if (data.hasOwnProperty('parentFile'))
        obj.parentFile = File.constructFromObject(data['parentFile']);
      if (data.hasOwnProperty('path'))
        obj.path = ApiClient.convertToType(data['path'], 'String');
      if (data.hasOwnProperty('totalSpace'))
        obj.totalSpace = ApiClient.convertToType(data['totalSpace'], 'Number');
      if (data.hasOwnProperty('usableSpace'))
        obj.usableSpace = ApiClient.convertToType(data['usableSpace'], 'Number');
    }
    return obj;
  }
}

/**
 * @member {Boolean} absolute
 */
File.prototype.absolute = undefined;

/**
 * @member {File} absoluteFile
 */
File.prototype.absoluteFile = undefined;

/**
 * @member {String} absolutePath
 */
File.prototype.absolutePath = undefined;

/**
 * @member {File} canonicalFile
 */
File.prototype.canonicalFile = undefined;

/**
 * @member {String} canonicalPath
 */
File.prototype.canonicalPath = undefined;

/**
 * @member {Boolean} directory
 */
File.prototype.directory = undefined;

/**
 * @member {Boolean} file
 */
File.prototype.file = undefined;

/**
 * @member {Number} freeSpace
 */
File.prototype.freeSpace = undefined;

/**
 * @member {Boolean} hidden
 */
File.prototype.hidden = undefined;

/**
 * @member {String} name
 */
File.prototype.name = undefined;

/**
 * @member {String} parent
 */
File.prototype.parent = undefined;

/**
 * @member {File} parentFile
 */
File.prototype.parentFile = undefined;

/**
 * @member {String} path
 */
File.prototype.path = undefined;

/**
 * @member {Number} totalSpace
 */
File.prototype.totalSpace = undefined;

/**
 * @member {Number} usableSpace
 */
File.prototype.usableSpace = undefined;


